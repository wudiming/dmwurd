act: Modify and Build RustDesk

on:
  workflow_dispatch:

jobs:
  modify-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Configure Git user info
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: Clone rustdesk repository and initialize submodules
        run: |
          git clone --recurse-submodules https://github.com/rustdesk/rustdesk.git
          cd rustdesk

      - name: Read submodule information from .gitmodules
        id: submodule-info
        run: |
          cd rustdesk
          SUBMODULE_PATH=$(git config -f .gitmodules --get submodule.libs/hbb_common.path)
          SUBMODULE_URL=$(git config -f .gitmodules --get submodule.libs/hbb_common.url)
          echo "::set-output name=submodule_path::$SUBMODULE_PATH"
          echo "::set-output name=submodule_url::$SUBMODULE_URL"

      - name: Remove submodule reference and delete files
        run: |
          cd rustdesk
          SUBMODULE_PATH=${{ steps.submodule-info.outputs.submodule_path }}
          git submodule deinit -f $SUBMODULE_PATH
          git rm --cached $SUBMODULE_PATH
          rm -rf $SUBMODULE_PATH

      - name: Clone submodule from URL
        run: |
          cd rustdesk
          SUBMODULE_URL=${{ steps.submodule-info.outputs.submodule_url }}
          SUBMODULE_PATH=${{ steps.submodule-info.outputs.submodule_path }}
          git clone $SUBMODULE_URL $SUBMODULE_PATH

      - name: Remove nested git repository if exists
        run: |
          cd rustdesk
          rm -rf libs/hbb_common/.git

      - name: Modify config.rs using Python (Precise Debug)
        run: |
          cd rustdesk/libs/hbb_common/src
          python3 - <<EOF
          import re
          with open('config.rs', 'r') as f:
              content = f.read()
          modified_content, count_rendezvous = re.subn(
              r'pub\s+const\s+RENDEZVOUS_SERVERS\s*:\s*&\[&str\]\s*=\s*&\[\s*"rs-ny\.rustdesk\.com"\s*\];',
              'pub const RENDEZVOUS_SERVERS: &[&str] = &["rd.1128.pp.ua"];',
              content,
              flags=re.DOTALL
          )
          modified_content, count_pubkey = re.subn(
              r'pub\s+const\s+RS_PUB_KEY\s*:\s*&str\s*=\s*"OeVuKk5nlHiXp\+APNn0Y3pC1Iwpwn44JGqrQCsWqmBw="\s*;',
              'pub const RS_PUB_KEY: &str = "0TyH5O6BjoRmefYCsRDMxiskEDPry25MSMPkc9mIlkw=";',
              modified_content,
              flags=re.DOTALL
          )
          print(f"[DEBUG] RENDEZVOUS_SERVERS替换次数: {count_rendezvous}")
          print(f"[DEBUG] RS_PUB_KEY替换次数: {count_pubkey}")
          with open('config.rs', 'w') as f:
              f.write(modified_content)
          EOF

      - name: Modify common.rs using Python
        run: |
          cd rustdesk/src
          python3 - <<EOF
          with open('common.rs', 'r') as f:
              content = f.read()
          content = content.replace(
              '"https://admin.rustdesk.com".to_owned()',
              '"https://rd.1128.pp.ua:21114".to_owned()'
          )
          with open('common.rs', 'w') as f:
              f.write(content)
          EOF

      - name: Modify flutter-ci.yml using Python
        run: |
          cd rustdesk/.github/workflows
          python3 - <<EOF
          with open('flutter-ci.yml', 'r') as f:
              content = f.read()
          content = content.replace(
              'upload-artifact: false',
              'upload-artifact: true'
          )
          with open('flutter-ci.yml', 'w') as f:
              f.write(content)
          EOF

      - name: Modify download URL in Dart file
        run: |
          cd rustdesk/flutter/lib/desktop/pages
          python3 - <<EOF
          with open('desktop_home_page.dart', 'r') as f:
              content = f.read()
          # 精确替换目标 URL，保留代码结构
          content = content.replace(
              "launchUrl(Uri.parse('https://rustdesk.com/download'))",
              "launchUrl(Uri.parse('https://github.com/wudiming/dmwurd/releases'))"
          )
          with open('desktop_home_page.dart', 'w') as f:
              f.write(content)
          EOF

      - name: Commit and push changes to the default branch
        run: |
          cd rustdesk
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | sed 's/.*: //')
          git checkout $DEFAULT_BRANCH
          git pull origin $DEFAULT_BRANCH
          git add .
          git commit -m "Automated changes for RustDesk project"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} $DEFAULT_BRANCH
