name: 构建 RustDesk-Pro

on:
  workflow_dispatch:
  schedule:
    - cron: '0 0 * * *'  # 每天 UTC 0 点，即北京时间 8 点运行

jobs:
  modify-and-build:
    runs-on: ubuntu-latest

    env:
      LOCAL_TAG_FILE: temp/tag.md

    steps:
      - name: 🔍 检查是否需要运行构建任务
        id: check-version
        run: |
          mkdir -p temp
          touch $LOCAL_TAG_FILE
          echo "local_tag=$(cat $LOCAL_TAG_FILE || echo 'none')" >> $GITHUB_ENV
          latest_tag=$(curl -s https://api.github.com/repos/rustdesk/rustdesk/tags | jq -r '.[2].name')
          echo "remote_tag=$latest_tag" >> $GITHUB_ENV

          if [ "$latest_tag" == "$(cat $LOCAL_TAG_FILE)" ]; then
            echo "版本一致，无需构建"
            echo "skip_build=true" >> $GITHUB_OUTPUT
          else
            echo "版本不一致，执行构建"
            echo "skip_build=false" >> $GITHUB_OUTPUT
          fi

      - name: 📦 设置 Git 用户信息
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"

      - name: 📁 克隆 rustdesk 仓库及子模块
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          git clone --recurse-submodules https://github.com/rustdesk/rustdesk.git

      - name: 🧹 移除子模块引用并删除文件
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk
          SUBMODULE_PATH=$(git config -f .gitmodules --get submodule.libs/hbb_common.path)
          git submodule deinit -f $SUBMODULE_PATH
          git rm --cached $SUBMODULE_PATH
          rm -rf $SUBMODULE_PATH

      - name: 🔄 重新克隆子模块
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk
          SUBMODULE_URL=$(git config -f .gitmodules --get submodule.libs/hbb_common.url)
          SUBMODULE_PATH=$(git config -f .gitmodules --get submodule.libs/hbb_common.path)
          git clone $SUBMODULE_URL $SUBMODULE_PATH

      - name: 🧹 删除嵌套 Git 仓库
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk
          rm -rf libs/hbb_common/.git

      - name: ✏️ 修改 config.rs 中的服务器和公钥
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk/libs/hbb_common/src
          python3 - <<EOF
import re
with open('config.rs', 'r') as f:
    content = f.read()
content, _ = re.subn(
    r'pub\\s+const\\s+RENDEZVOUS_SERVERS\\s*:\\s*&\\[&str\\]\\s*=\\s*&\\[.*?\\];',
    'pub const RENDEZVOUS_SERVERS: &[&str] = &["rd.1128.pp.ua"];',
    content,
    flags=re.DOTALL
)
content, _ = re.subn(
    r'pub\\s+const\\s+RS_PUB_KEY\\s*:\\s*&str\\s*=\\s*".*?"\\s*;',
    'pub const RS_PUB_KEY: &str = "0TyH5O6BjoRmefYCsRDMxiskEDPry25MSMPkc9mIlkw=";',
    content
)
with open('config.rs', 'w') as f:
    f.write(content)
EOF

      - name: ✏️ 修改 common.rs 管理地址
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk/src
          sed -i 's|"https://admin.rustdesk.com".to_owned()|"https://rd.1128.pp.ua:21114".to_owned()|g' common.rs

      - name: ✏️ 修改下载链接 desktop_home_page.dart
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk/flutter/lib/desktop/pages
          sed -i "s|https://rustdesk.com/download|https://github.com/wudiming/dmwurd/releases|g" desktop_home_page.dart

      - name: ✏️ 修改 flutter-ci.yml 上传设置
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk/.github/workflows
          sed -i 's/upload-artifact: false/upload-artifact: true/g' flutter-ci.yml

      - name: ➕ 自动插入删除 master 分支 Job（依赖所有其他 Job）
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk/.github/workflows
          python3 - <<"EOF"
import yaml
import re

file_path = "flutter-build.yml"
with open(file_path, "r", encoding="utf-8") as f:
    data = yaml.safe_load(f)

jobs = data.get("jobs", {})
if "delete-master-branch" in jobs:
    print("⚠️ 已存在 delete-master-branch Job，跳过插入")
    exit(0)

job_names = [j for j in jobs if j != "delete-master-branch"]
needs_line = ", ".join(job_names)

block = f"""
  delete-master-branch:
    needs: [{needs_line}]
    runs-on: ubuntu-latest
    if: ${{{{ always() }}}}
    steps:
      - name: 删除 master 分支（若不是默认分支）
        env:
          GITHUB_TOKEN: ${{{{ secrets.PAT_TOKEN }}}}
        run: |
          echo "检查默认分支..."
          default_branch=$(curl -s -H "Authorization: token $GITHUB_TOKEN" https://api.github.com/repos/${{{{ github.repository }}}} | jq -r .default_branch)
          if [ "$default_branch" != "master" ]; then
            echo "默认分支为 $default_branch，允许删除 master"
            git push origin --delete master
          else
            echo "⚠️ master 是默认分支，不能删除"
          fi
"""

# 修复YAML格式问题
block = re.sub(r'(\${{)', r'$\1', block)

with open(file_path, "r", encoding="utf-8") as f:
    lines = f.readlines()

insert_index = None
for i, line in enumerate(lines):
    if line.startswith("jobs:") and i < len(lines) - 1:
        insert_index = i + 1
        break

if insert_index is None:
    print("❌ 未找到合适的插入位置")
    exit(1)

lines.insert(insert_index, block + "\n")

with open(file_path, "w", encoding="utf-8") as f:
    f.writelines(lines)

print("✅ 插入成功")
EOF

      - name: 📝 提交并推送修改
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          cd rustdesk
          DEFAULT_BRANCH=$(git remote show origin | grep 'HEAD branch' | awk '{print $NF}')
          git checkout $DEFAULT_BRANCH
          git pull origin $DEFAULT_BRANCH
          git add .
          git commit -m "自动化修改 RustDesk 配置与依赖，并插入删除 master 分支逻辑"
          git push https://x-access-token:${{ secrets.PAT_TOKEN }}@github.com/${{ github.repository }} $DEFAULT_BRANCH

      - name: 📌 更新本地版本记录 tag.md
        if: steps.check-version.outputs.skip_build == 'false'
        run: |
          echo "${{ env.remote_tag }}" > $LOCAL_TAG_FILE
